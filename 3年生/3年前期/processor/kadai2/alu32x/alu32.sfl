/* (alu32.h) */

%i "cla32.h"

module alu32 {
    input a<32>, b<32>;
    output out<32>;
    output overflow;
    output zero;
    instrin op_add;
    instrin op_sub;
    instrin op_and;
    instrin op_or;
    instrin op_xor;
    instrin op_nor;

    cla32 adder;

    instruct op_add par {
	out = adder.do(a,b,0b0).sum;
	overflow = ^(a<31> @ b<31>) & (b<31> @ adder.sum<31>);

	zero = /&^adder.sum;
    }
    instruct op_sub par {
	out = adder.do(a,^b,0b1).sum;
	overflow = (a<31> @ b<31>) & ^(b<31> @ adder.sum<31>);
		    
	zero = /&^adder.sum;
    }
    instruct op_and out = a & b;
    instruct op_or  out = a | b;
    instruct op_xor out = a @ b;
    instruct op_nor out = ^(a | b); 
} /* module alu32 */

/* end of file (alu32.sfl) */
