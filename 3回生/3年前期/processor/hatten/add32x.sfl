%i "alladd.h"

module add4{
    input a<4>, b<4>, cin;
    output sum<4>, cout;
    instrin do;

    sel out1,out2,out3,p,q,p1,q1,p2,q2,p3,q3;


    instruct do par{
	p = a<0> @ b<0>;
	q = a<0> & b<0>;
	out1 = (p & cin) | q;

	p1 = a<1> @ b<1>;
	q1 = a<1> & b<1>;
	out2 = (p1 & out1) | q1;

    	p2 = a<2> @ b<2>;
	q2 = a<2> & b<2>;
	out3 = (p2 & out2) | q2;

    	p3 = a<3> @ b<3>;
	q3 = a<3> & b<3>;
	cout = (p3 & out3) | q3;
	
	sum = (p3 @ out3) || 
	      (p2 @ out2) || 
	      (p1 @ out1) || 
	      (p@cin);
 }
}




module add8{
    input a<8>;
    input b<8>;
    input cin;
    output sum<8>;
    output cout;
    instrin do;

    add4 ad0, ad1;
    
    instruct do par{
	ad0.do(a<3:0> , b<3:0> , cin);
	ad1.do(a<7:4> , b<7:4> , ad0.cout);
	
	sum = ad1.sum || ad0.sum;
	cout = ad1.cout;
    }
}

module add16{
    input a<16>;
    input b<16>;
    input cin;
    output sum<16>;
    output cout;
    instrin do;

    add8 ad0, ad1;
    
    instruct do par{
	ad0.do(a<7:0> , b<7:0> , cin);
	ad1.do(a<15:8> , b<15:8> , ad0.cout);
	
	sum = ad1.sum || ad0.sum;
	cout = ad1.cout;
    }
}


module add32 {
    input a<32>;
    input b<32>;
    input cin;      /* carry in */
    output sum<32>;
    output cout;    /* carry out */
    instrin do;

    add16 ad0, ad1;

    instruct do par {
	ad0.do(a<15:0>  , b<15:0>  , cin);
	ad1.do(a<31:16>  , b<31:16>  , ad0.cout);;

	sum = ad1.sum || ad0.sum;
	cout = ad1.cout;
    }
} /* module add32 */

/* end of file (add32.sfl) */
