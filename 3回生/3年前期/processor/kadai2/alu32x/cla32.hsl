IDENT: SFL ;
DATE: 2015/8/3 ;
AUTHOR: 09425521 ;
VERSION: 1.8 ;
COMMENT: SFL pure logic ;
COLLECTION: SFL ;
PROJECT: SFL ;

NAME: cla ;
PURPOSE: SFL ;
PROCESS: SFL ;
LEVEL: SFL ;
EXT:
	a,
	b,
	cin,
	sum,
	cout,
	pout,
	qout,
	do,
	b_clock,
	m_clock,
	s_clock,
	p_reset ;
INPUTS:
	.a,
	.b,
	.cin,
	.do,
	.b_clock,
	.m_clock,
	.s_clock,
	.p_reset ;
OUTPUTS:
	.sum,
	.cout,
	.pout,
	.qout ;
TYPES:
	high-,
	low-,
	eor--2,
	inv-,
	nand--2 ;
inv-:
	inv-1 ;
nand--2:
	nand-1,
	nand-2,
	nand-3 ;
eor--2:
	eor-1,
	eor-2 ;
high-:
	high- ;
low-:
	low- ;
END-TYPES ;
NET-SECTION ;
"***** task set reset *****"
"***** dummy bus *****"
"***** dummy instrself *****"
"***** simple path *****"
net--cin =	FROM( .cin )	TO( eor-2.in2 ) ;
net--b =	FROM( .b )	TO( eor-1.in2 ) ;
net-eor-1-out =	FROM( eor-1.out )	TO( eor-2.in1 ) ;
net--a =	FROM( .a )	TO( eor-1.in1 ) ;
net-inv-1-nout =	FROM( inv-1.nout )	TO( .qout ) ;
net-eor-1-out =	FROM( eor-1.out )	TO( .pout ) ;
net-nand-1-nout =	FROM( nand-1.nout )	TO( .cout ) ;
net-eor-2-out =	FROM( eor-2.out )	TO( .sum ) ;
"***** bus *****"
"***** selecter *****"
"***** or *****"
"***** and *****"
net-nand-2-nout =	FROM( nand-2.nout )	TO( nand-1.in1 ) ;
net-nand-3-nout =	FROM( nand-3.nout )	TO( nand-1.in2 ) ;
net--a =	FROM( .a )	TO( nand-2.in1 ) ;
net--b =	FROM( .b )	TO( nand-2.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-3.in1 ) ;
net-eor-1-out =	FROM( eor-1.out )	TO( nand-3.in2 ) ;
"***** not *****"
net-nand-2-nout =	FROM( nand-2.nout )	TO( inv-1.in ) ;
"***** reset clock *****"
END-SECTION ;
END ;

NAME: cla2 ;
PURPOSE: SFL ;
PROCESS: SFL ;
LEVEL: SFL ;
EXT:
	a<1:0>,
	b<1:0>,
	cin,
	sum<1:0>,
	cout,
	pout,
	qout,
	do,
	b_clock,
	m_clock,
	s_clock,
	p_reset ;
INPUTS:
	.a<1:0>,
	.b<1:0>,
	.cin,
	.do,
	.b_clock,
	.m_clock,
	.s_clock,
	.p_reset ;
OUTPUTS:
	.sum<1:0>,
	.cout,
	.pout,
	.qout ;
TYPES:
	high-,
	low-,
	cla,
	inv-,
	nand--2,
	nor--2 ;
cla:
	cx,
	cy ;
inv-:
	inv-1,
	inv-2,
	inv-3,
	inv-4,
	inv-5 ;
nand--2:
	nand-1,
	nand-2,
	nand-3,
	nand-4,
	nand-5,
	nand-6 ;
nor--2:
	nor-1 ;
high-:
	high- ;
low-:
	low- ;
END-TYPES ;
NET-SECTION ;
"***** task set reset *****"
"***** dummy bus *****"
"***** dummy instrself *****"
"***** simple path *****"
net-cy-sum =	FROM( cy.sum )	TO( .sum<1> ) ;
net-cx-sum =	FROM( cx.sum )	TO( .sum<0> ) ;
net-nand-1-nout =	FROM( nand-1.nout )	TO( .qout ) ;
net-nor-1-nout =	FROM( nor-1.nout )	TO( .pout ) ;
net-nand-5-nout =	FROM( nand-5.nout )	TO( .cout ) ;
net-nand-3-nout =	FROM( nand-3.nout )	TO( cy.cin ) ;
net--cin =	FROM( .cin )	TO( cx.cin ) ;
net--b<1> =	FROM( .b<1> )	TO( cy.b ) ;
net--b<0> =	FROM( .b<0> )	TO( cx.b ) ;
net--a<1> =	FROM( .a<1> )	TO( cy.a ) ;
net--a<0> =	FROM( .a<0> )	TO( cx.a ) ;
net--do =	FROM( .do )	TO( cy.do ) ;
net--do =	FROM( .do )	TO( cx.do ) ;
"***** bus *****"
"***** selecter *****"
"***** or *****"
net-inv-4-nout =	FROM( inv-4.nout )	TO( nor-1.in1 ) ;
net-inv-5-nout =	FROM( inv-5.nout )	TO( nor-1.in2 ) ;
"***** and *****"
net-inv-1-nout =	FROM( inv-1.nout )	TO( nand-1.in1 ) ;
net-nand-2-nout =	FROM( nand-2.nout )	TO( nand-1.in2 ) ;
net-cy-pout =	FROM( cy.pout )	TO( nand-2.in1 ) ;
net-cx-qout =	FROM( cx.qout )	TO( nand-2.in2 ) ;
net-inv-2-nout =	FROM( inv-2.nout )	TO( nand-3.in1 ) ;
net-nand-4-nout =	FROM( nand-4.nout )	TO( nand-3.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-4.in1 ) ;
net-cx-pout =	FROM( cx.pout )	TO( nand-4.in2 ) ;
net-inv-3-nout =	FROM( inv-3.nout )	TO( nand-5.in1 ) ;
net-nand-6-nout =	FROM( nand-6.nout )	TO( nand-5.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-6.in1 ) ;
net--pout =	FROM( .pout )	TO( nand-6.in2 ) ;
"***** not *****"
net-cy-qout =	FROM( cy.qout )	TO( inv-1.in ) ;
net-cx-qout =	FROM( cx.qout )	TO( inv-2.in ) ;
net--qout =	FROM( .qout )	TO( inv-3.in ) ;
net-cx-pout =	FROM( cx.pout )	TO( inv-4.in ) ;
net-cy-pout =	FROM( cy.pout )	TO( inv-5.in ) ;
"***** reset clock *****"
net--m_clock =	FROM( .m_clock )	TO( cx.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( cx.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( cx.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( cx.b_clock ) ;
net--m_clock =	FROM( .m_clock )	TO( cy.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( cy.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( cy.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( cy.b_clock ) ;
END-SECTION ;
END ;

NAME: cla4 ;
PURPOSE: SFL ;
PROCESS: SFL ;
LEVEL: SFL ;
EXT:
	a<3:0>,
	b<3:0>,
	cin,
	sum<3:0>,
	cout,
	pout,
	qout,
	do,
	b_clock,
	m_clock,
	s_clock,
	p_reset ;
INPUTS:
	.a<3:0>,
	.b<3:0>,
	.cin,
	.do,
	.b_clock,
	.m_clock,
	.s_clock,
	.p_reset ;
OUTPUTS:
	.sum<3:0>,
	.cout,
	.pout,
	.qout ;
TYPES:
	high-,
	low-,
	cla2,
	inv-,
	nand--2,
	nor--2 ;
cla2:
	c2x,
	c2y ;
inv-:
	inv-1,
	inv-2,
	inv-3,
	inv-4,
	inv-5 ;
nand--2:
	nand-1,
	nand-2,
	nand-3,
	nand-4,
	nand-5,
	nand-6 ;
nor--2:
	nor-1 ;
high-:
	high- ;
low-:
	low- ;
END-TYPES ;
NET-SECTION ;
"***** task set reset *****"
"***** dummy bus *****"
"***** dummy instrself *****"
"***** simple path *****"
net-c2y-sum<1> =	FROM( c2y.sum<1> )	TO( .sum<3> ) ;
net-c2y-sum<0> =	FROM( c2y.sum<0> )	TO( .sum<2> ) ;
net-c2x-sum<1> =	FROM( c2x.sum<1> )	TO( .sum<1> ) ;
net-c2x-sum<0> =	FROM( c2x.sum<0> )	TO( .sum<0> ) ;
net-nand-1-nout =	FROM( nand-1.nout )	TO( .qout ) ;
net-nor-1-nout =	FROM( nor-1.nout )	TO( .pout ) ;
net-nand-5-nout =	FROM( nand-5.nout )	TO( .cout ) ;
net--b<3> =	FROM( .b<3> )	TO( c2y.b<1> ) ;
net--b<2> =	FROM( .b<2> )	TO( c2y.b<0> ) ;
net--b<1> =	FROM( .b<1> )	TO( c2x.b<1> ) ;
net--b<0> =	FROM( .b<0> )	TO( c2x.b<0> ) ;
net--a<3> =	FROM( .a<3> )	TO( c2y.a<1> ) ;
net--a<2> =	FROM( .a<2> )	TO( c2y.a<0> ) ;
net--a<1> =	FROM( .a<1> )	TO( c2x.a<1> ) ;
net--a<0> =	FROM( .a<0> )	TO( c2x.a<0> ) ;
net-nand-3-nout =	FROM( nand-3.nout )	TO( c2y.cin ) ;
net--cin =	FROM( .cin )	TO( c2x.cin ) ;
net--do =	FROM( .do )	TO( c2y.do ) ;
net--do =	FROM( .do )	TO( c2x.do ) ;
"***** bus *****"
"***** selecter *****"
"***** or *****"
net-inv-4-nout =	FROM( inv-4.nout )	TO( nor-1.in1 ) ;
net-inv-5-nout =	FROM( inv-5.nout )	TO( nor-1.in2 ) ;
"***** and *****"
net-inv-1-nout =	FROM( inv-1.nout )	TO( nand-1.in1 ) ;
net-nand-2-nout =	FROM( nand-2.nout )	TO( nand-1.in2 ) ;
net-c2y-pout =	FROM( c2y.pout )	TO( nand-2.in1 ) ;
net-c2x-qout =	FROM( c2x.qout )	TO( nand-2.in2 ) ;
net-inv-2-nout =	FROM( inv-2.nout )	TO( nand-3.in1 ) ;
net-nand-4-nout =	FROM( nand-4.nout )	TO( nand-3.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-4.in1 ) ;
net-c2x-pout =	FROM( c2x.pout )	TO( nand-4.in2 ) ;
net-inv-3-nout =	FROM( inv-3.nout )	TO( nand-5.in1 ) ;
net-nand-6-nout =	FROM( nand-6.nout )	TO( nand-5.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-6.in1 ) ;
net--pout =	FROM( .pout )	TO( nand-6.in2 ) ;
"***** not *****"
net-c2y-qout =	FROM( c2y.qout )	TO( inv-1.in ) ;
net-c2x-qout =	FROM( c2x.qout )	TO( inv-2.in ) ;
net--qout =	FROM( .qout )	TO( inv-3.in ) ;
net-c2x-pout =	FROM( c2x.pout )	TO( inv-4.in ) ;
net-c2y-pout =	FROM( c2y.pout )	TO( inv-5.in ) ;
"***** reset clock *****"
net--m_clock =	FROM( .m_clock )	TO( c2x.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( c2x.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( c2x.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( c2x.b_clock ) ;
net--m_clock =	FROM( .m_clock )	TO( c2y.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( c2y.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( c2y.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( c2y.b_clock ) ;
END-SECTION ;
END ;

NAME: cla8 ;
PURPOSE: SFL ;
PROCESS: SFL ;
LEVEL: SFL ;
EXT:
	a<7:0>,
	b<7:0>,
	cin,
	sum<7:0>,
	cout,
	pout,
	qout,
	do,
	b_clock,
	m_clock,
	s_clock,
	p_reset ;
INPUTS:
	.a<7:0>,
	.b<7:0>,
	.cin,
	.do,
	.b_clock,
	.m_clock,
	.s_clock,
	.p_reset ;
OUTPUTS:
	.sum<7:0>,
	.cout,
	.pout,
	.qout ;
TYPES:
	high-,
	low-,
	cla4,
	inv-,
	nand--2,
	nor--2 ;
cla4:
	c4x,
	c4y ;
inv-:
	inv-1,
	inv-2,
	inv-3,
	inv-4,
	inv-5 ;
nand--2:
	nand-1,
	nand-2,
	nand-3,
	nand-4,
	nand-5,
	nand-6 ;
nor--2:
	nor-1 ;
high-:
	high- ;
low-:
	low- ;
END-TYPES ;
NET-SECTION ;
"***** task set reset *****"
"***** dummy bus *****"
"***** dummy instrself *****"
"***** simple path *****"
net-c4y-sum<3> =	FROM( c4y.sum<3> )	TO( .sum<7> ) ;
net-c4y-sum<2> =	FROM( c4y.sum<2> )	TO( .sum<6> ) ;
net-c4y-sum<1> =	FROM( c4y.sum<1> )	TO( .sum<5> ) ;
net-c4y-sum<0> =	FROM( c4y.sum<0> )	TO( .sum<4> ) ;
net-c4x-sum<3> =	FROM( c4x.sum<3> )	TO( .sum<3> ) ;
net-c4x-sum<2> =	FROM( c4x.sum<2> )	TO( .sum<2> ) ;
net-c4x-sum<1> =	FROM( c4x.sum<1> )	TO( .sum<1> ) ;
net-c4x-sum<0> =	FROM( c4x.sum<0> )	TO( .sum<0> ) ;
net-nand-1-nout =	FROM( nand-1.nout )	TO( .qout ) ;
net-nor-1-nout =	FROM( nor-1.nout )	TO( .pout ) ;
net-nand-5-nout =	FROM( nand-5.nout )	TO( .cout ) ;
net--b<7> =	FROM( .b<7> )	TO( c4y.b<3> ) ;
net--b<6> =	FROM( .b<6> )	TO( c4y.b<2> ) ;
net--b<5> =	FROM( .b<5> )	TO( c4y.b<1> ) ;
net--b<4> =	FROM( .b<4> )	TO( c4y.b<0> ) ;
net--b<3> =	FROM( .b<3> )	TO( c4x.b<3> ) ;
net--b<2> =	FROM( .b<2> )	TO( c4x.b<2> ) ;
net--b<1> =	FROM( .b<1> )	TO( c4x.b<1> ) ;
net--b<0> =	FROM( .b<0> )	TO( c4x.b<0> ) ;
net--a<7> =	FROM( .a<7> )	TO( c4y.a<3> ) ;
net--a<6> =	FROM( .a<6> )	TO( c4y.a<2> ) ;
net--a<5> =	FROM( .a<5> )	TO( c4y.a<1> ) ;
net--a<4> =	FROM( .a<4> )	TO( c4y.a<0> ) ;
net--a<3> =	FROM( .a<3> )	TO( c4x.a<3> ) ;
net--a<2> =	FROM( .a<2> )	TO( c4x.a<2> ) ;
net--a<1> =	FROM( .a<1> )	TO( c4x.a<1> ) ;
net--a<0> =	FROM( .a<0> )	TO( c4x.a<0> ) ;
net-nand-3-nout =	FROM( nand-3.nout )	TO( c4y.cin ) ;
net--cin =	FROM( .cin )	TO( c4x.cin ) ;
net--do =	FROM( .do )	TO( c4y.do ) ;
net--do =	FROM( .do )	TO( c4x.do ) ;
"***** bus *****"
"***** selecter *****"
"***** or *****"
net-inv-4-nout =	FROM( inv-4.nout )	TO( nor-1.in1 ) ;
net-inv-5-nout =	FROM( inv-5.nout )	TO( nor-1.in2 ) ;
"***** and *****"
net-inv-1-nout =	FROM( inv-1.nout )	TO( nand-1.in1 ) ;
net-nand-2-nout =	FROM( nand-2.nout )	TO( nand-1.in2 ) ;
net-c4y-pout =	FROM( c4y.pout )	TO( nand-2.in1 ) ;
net-c4x-qout =	FROM( c4x.qout )	TO( nand-2.in2 ) ;
net-inv-2-nout =	FROM( inv-2.nout )	TO( nand-3.in1 ) ;
net-nand-4-nout =	FROM( nand-4.nout )	TO( nand-3.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-4.in1 ) ;
net-c4x-pout =	FROM( c4x.pout )	TO( nand-4.in2 ) ;
net-inv-3-nout =	FROM( inv-3.nout )	TO( nand-5.in1 ) ;
net-nand-6-nout =	FROM( nand-6.nout )	TO( nand-5.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-6.in1 ) ;
net--pout =	FROM( .pout )	TO( nand-6.in2 ) ;
"***** not *****"
net-c4y-qout =	FROM( c4y.qout )	TO( inv-1.in ) ;
net-c4x-qout =	FROM( c4x.qout )	TO( inv-2.in ) ;
net--qout =	FROM( .qout )	TO( inv-3.in ) ;
net-c4x-pout =	FROM( c4x.pout )	TO( inv-4.in ) ;
net-c4y-pout =	FROM( c4y.pout )	TO( inv-5.in ) ;
"***** reset clock *****"
net--m_clock =	FROM( .m_clock )	TO( c4x.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( c4x.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( c4x.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( c4x.b_clock ) ;
net--m_clock =	FROM( .m_clock )	TO( c4y.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( c4y.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( c4y.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( c4y.b_clock ) ;
END-SECTION ;
END ;

NAME: cla16 ;
PURPOSE: SFL ;
PROCESS: SFL ;
LEVEL: SFL ;
EXT:
	a<15:0>,
	b<15:0>,
	cin,
	sum<15:0>,
	cout,
	pout,
	qout,
	do,
	b_clock,
	m_clock,
	s_clock,
	p_reset ;
INPUTS:
	.a<15:0>,
	.b<15:0>,
	.cin,
	.do,
	.b_clock,
	.m_clock,
	.s_clock,
	.p_reset ;
OUTPUTS:
	.sum<15:0>,
	.cout,
	.pout,
	.qout ;
TYPES:
	high-,
	low-,
	cla8,
	inv-,
	nand--2,
	nor--2 ;
cla8:
	c8x,
	c8y ;
inv-:
	inv-1,
	inv-2,
	inv-3,
	inv-4,
	inv-5 ;
nand--2:
	nand-1,
	nand-2,
	nand-3,
	nand-4,
	nand-5,
	nand-6 ;
nor--2:
	nor-1 ;
high-:
	high- ;
low-:
	low- ;
END-TYPES ;
NET-SECTION ;
"***** task set reset *****"
"***** dummy bus *****"
"***** dummy instrself *****"
"***** simple path *****"
net-c8y-sum<7> =	FROM( c8y.sum<7> )	TO( .sum<15> ) ;
net-c8y-sum<6> =	FROM( c8y.sum<6> )	TO( .sum<14> ) ;
net-c8y-sum<5> =	FROM( c8y.sum<5> )	TO( .sum<13> ) ;
net-c8y-sum<4> =	FROM( c8y.sum<4> )	TO( .sum<12> ) ;
net-c8y-sum<3> =	FROM( c8y.sum<3> )	TO( .sum<11> ) ;
net-c8y-sum<2> =	FROM( c8y.sum<2> )	TO( .sum<10> ) ;
net-c8y-sum<1> =	FROM( c8y.sum<1> )	TO( .sum<9> ) ;
net-c8y-sum<0> =	FROM( c8y.sum<0> )	TO( .sum<8> ) ;
net-c8x-sum<7> =	FROM( c8x.sum<7> )	TO( .sum<7> ) ;
net-c8x-sum<6> =	FROM( c8x.sum<6> )	TO( .sum<6> ) ;
net-c8x-sum<5> =	FROM( c8x.sum<5> )	TO( .sum<5> ) ;
net-c8x-sum<4> =	FROM( c8x.sum<4> )	TO( .sum<4> ) ;
net-c8x-sum<3> =	FROM( c8x.sum<3> )	TO( .sum<3> ) ;
net-c8x-sum<2> =	FROM( c8x.sum<2> )	TO( .sum<2> ) ;
net-c8x-sum<1> =	FROM( c8x.sum<1> )	TO( .sum<1> ) ;
net-c8x-sum<0> =	FROM( c8x.sum<0> )	TO( .sum<0> ) ;
net-nand-1-nout =	FROM( nand-1.nout )	TO( .qout ) ;
net-nor-1-nout =	FROM( nor-1.nout )	TO( .pout ) ;
net-nand-5-nout =	FROM( nand-5.nout )	TO( .cout ) ;
net--b<15> =	FROM( .b<15> )	TO( c8y.b<7> ) ;
net--b<14> =	FROM( .b<14> )	TO( c8y.b<6> ) ;
net--b<13> =	FROM( .b<13> )	TO( c8y.b<5> ) ;
net--b<12> =	FROM( .b<12> )	TO( c8y.b<4> ) ;
net--b<11> =	FROM( .b<11> )	TO( c8y.b<3> ) ;
net--b<10> =	FROM( .b<10> )	TO( c8y.b<2> ) ;
net--b<9> =	FROM( .b<9> )	TO( c8y.b<1> ) ;
net--b<8> =	FROM( .b<8> )	TO( c8y.b<0> ) ;
net--b<7> =	FROM( .b<7> )	TO( c8x.b<7> ) ;
net--b<6> =	FROM( .b<6> )	TO( c8x.b<6> ) ;
net--b<5> =	FROM( .b<5> )	TO( c8x.b<5> ) ;
net--b<4> =	FROM( .b<4> )	TO( c8x.b<4> ) ;
net--b<3> =	FROM( .b<3> )	TO( c8x.b<3> ) ;
net--b<2> =	FROM( .b<2> )	TO( c8x.b<2> ) ;
net--b<1> =	FROM( .b<1> )	TO( c8x.b<1> ) ;
net--b<0> =	FROM( .b<0> )	TO( c8x.b<0> ) ;
net--a<15> =	FROM( .a<15> )	TO( c8y.a<7> ) ;
net--a<14> =	FROM( .a<14> )	TO( c8y.a<6> ) ;
net--a<13> =	FROM( .a<13> )	TO( c8y.a<5> ) ;
net--a<12> =	FROM( .a<12> )	TO( c8y.a<4> ) ;
net--a<11> =	FROM( .a<11> )	TO( c8y.a<3> ) ;
net--a<10> =	FROM( .a<10> )	TO( c8y.a<2> ) ;
net--a<9> =	FROM( .a<9> )	TO( c8y.a<1> ) ;
net--a<8> =	FROM( .a<8> )	TO( c8y.a<0> ) ;
net--a<7> =	FROM( .a<7> )	TO( c8x.a<7> ) ;
net--a<6> =	FROM( .a<6> )	TO( c8x.a<6> ) ;
net--a<5> =	FROM( .a<5> )	TO( c8x.a<5> ) ;
net--a<4> =	FROM( .a<4> )	TO( c8x.a<4> ) ;
net--a<3> =	FROM( .a<3> )	TO( c8x.a<3> ) ;
net--a<2> =	FROM( .a<2> )	TO( c8x.a<2> ) ;
net--a<1> =	FROM( .a<1> )	TO( c8x.a<1> ) ;
net--a<0> =	FROM( .a<0> )	TO( c8x.a<0> ) ;
net-nand-3-nout =	FROM( nand-3.nout )	TO( c8y.cin ) ;
net--cin =	FROM( .cin )	TO( c8x.cin ) ;
net--do =	FROM( .do )	TO( c8y.do ) ;
net--do =	FROM( .do )	TO( c8x.do ) ;
"***** bus *****"
"***** selecter *****"
"***** or *****"
net-inv-4-nout =	FROM( inv-4.nout )	TO( nor-1.in1 ) ;
net-inv-5-nout =	FROM( inv-5.nout )	TO( nor-1.in2 ) ;
"***** and *****"
net-inv-1-nout =	FROM( inv-1.nout )	TO( nand-1.in1 ) ;
net-nand-2-nout =	FROM( nand-2.nout )	TO( nand-1.in2 ) ;
net-c8y-pout =	FROM( c8y.pout )	TO( nand-2.in1 ) ;
net-c8x-qout =	FROM( c8x.qout )	TO( nand-2.in2 ) ;
net-inv-2-nout =	FROM( inv-2.nout )	TO( nand-3.in1 ) ;
net-nand-4-nout =	FROM( nand-4.nout )	TO( nand-3.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-4.in1 ) ;
net-c8x-pout =	FROM( c8x.pout )	TO( nand-4.in2 ) ;
net-inv-3-nout =	FROM( inv-3.nout )	TO( nand-5.in1 ) ;
net-nand-6-nout =	FROM( nand-6.nout )	TO( nand-5.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-6.in1 ) ;
net--pout =	FROM( .pout )	TO( nand-6.in2 ) ;
"***** not *****"
net-c8y-qout =	FROM( c8y.qout )	TO( inv-1.in ) ;
net-c8x-qout =	FROM( c8x.qout )	TO( inv-2.in ) ;
net--qout =	FROM( .qout )	TO( inv-3.in ) ;
net-c8x-pout =	FROM( c8x.pout )	TO( inv-4.in ) ;
net-c8y-pout =	FROM( c8y.pout )	TO( inv-5.in ) ;
"***** reset clock *****"
net--m_clock =	FROM( .m_clock )	TO( c8x.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( c8x.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( c8x.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( c8x.b_clock ) ;
net--m_clock =	FROM( .m_clock )	TO( c8y.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( c8y.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( c8y.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( c8y.b_clock ) ;
END-SECTION ;
END ;

NAME: cla32 ;
PURPOSE: SFL ;
PROCESS: SFL ;
LEVEL: SFL ;
EXT:
	a<31:0>,
	b<31:0>,
	cin,
	sum<31:0>,
	cout,
	pout,
	qout,
	do,
	b_clock,
	m_clock,
	s_clock,
	p_reset ;
INPUTS:
	.a<31:0>,
	.b<31:0>,
	.cin,
	.do,
	.b_clock,
	.m_clock,
	.s_clock,
	.p_reset ;
OUTPUTS:
	.sum<31:0>,
	.cout,
	.pout,
	.qout ;
TYPES:
	high-,
	low-,
	cla16,
	inv-,
	nand--2,
	nor--2 ;
cla16:
	c16x,
	c16y ;
inv-:
	inv-1,
	inv-2,
	inv-3,
	inv-4,
	inv-5 ;
nand--2:
	nand-1,
	nand-2,
	nand-3,
	nand-4,
	nand-5,
	nand-6 ;
nor--2:
	nor-1 ;
high-:
	high- ;
low-:
	low- ;
END-TYPES ;
NET-SECTION ;
"***** task set reset *****"
"***** dummy bus *****"
"***** dummy instrself *****"
"***** simple path *****"
net-c16y-sum<15> =	FROM( c16y.sum<15> )	TO( .sum<31> ) ;
net-c16y-sum<14> =	FROM( c16y.sum<14> )	TO( .sum<30> ) ;
net-c16y-sum<13> =	FROM( c16y.sum<13> )	TO( .sum<29> ) ;
net-c16y-sum<12> =	FROM( c16y.sum<12> )	TO( .sum<28> ) ;
net-c16y-sum<11> =	FROM( c16y.sum<11> )	TO( .sum<27> ) ;
net-c16y-sum<10> =	FROM( c16y.sum<10> )	TO( .sum<26> ) ;
net-c16y-sum<9> =	FROM( c16y.sum<9> )	TO( .sum<25> ) ;
net-c16y-sum<8> =	FROM( c16y.sum<8> )	TO( .sum<24> ) ;
net-c16y-sum<7> =	FROM( c16y.sum<7> )	TO( .sum<23> ) ;
net-c16y-sum<6> =	FROM( c16y.sum<6> )	TO( .sum<22> ) ;
net-c16y-sum<5> =	FROM( c16y.sum<5> )	TO( .sum<21> ) ;
net-c16y-sum<4> =	FROM( c16y.sum<4> )	TO( .sum<20> ) ;
net-c16y-sum<3> =	FROM( c16y.sum<3> )	TO( .sum<19> ) ;
net-c16y-sum<2> =	FROM( c16y.sum<2> )	TO( .sum<18> ) ;
net-c16y-sum<1> =	FROM( c16y.sum<1> )	TO( .sum<17> ) ;
net-c16y-sum<0> =	FROM( c16y.sum<0> )	TO( .sum<16> ) ;
net-c16x-sum<15> =	FROM( c16x.sum<15> )	TO( .sum<15> ) ;
net-c16x-sum<14> =	FROM( c16x.sum<14> )	TO( .sum<14> ) ;
net-c16x-sum<13> =	FROM( c16x.sum<13> )	TO( .sum<13> ) ;
net-c16x-sum<12> =	FROM( c16x.sum<12> )	TO( .sum<12> ) ;
net-c16x-sum<11> =	FROM( c16x.sum<11> )	TO( .sum<11> ) ;
net-c16x-sum<10> =	FROM( c16x.sum<10> )	TO( .sum<10> ) ;
net-c16x-sum<9> =	FROM( c16x.sum<9> )	TO( .sum<9> ) ;
net-c16x-sum<8> =	FROM( c16x.sum<8> )	TO( .sum<8> ) ;
net-c16x-sum<7> =	FROM( c16x.sum<7> )	TO( .sum<7> ) ;
net-c16x-sum<6> =	FROM( c16x.sum<6> )	TO( .sum<6> ) ;
net-c16x-sum<5> =	FROM( c16x.sum<5> )	TO( .sum<5> ) ;
net-c16x-sum<4> =	FROM( c16x.sum<4> )	TO( .sum<4> ) ;
net-c16x-sum<3> =	FROM( c16x.sum<3> )	TO( .sum<3> ) ;
net-c16x-sum<2> =	FROM( c16x.sum<2> )	TO( .sum<2> ) ;
net-c16x-sum<1> =	FROM( c16x.sum<1> )	TO( .sum<1> ) ;
net-c16x-sum<0> =	FROM( c16x.sum<0> )	TO( .sum<0> ) ;
net-nand-1-nout =	FROM( nand-1.nout )	TO( .qout ) ;
net-nor-1-nout =	FROM( nor-1.nout )	TO( .pout ) ;
net-nand-5-nout =	FROM( nand-5.nout )	TO( .cout ) ;
net--b<31> =	FROM( .b<31> )	TO( c16y.b<15> ) ;
net--b<30> =	FROM( .b<30> )	TO( c16y.b<14> ) ;
net--b<29> =	FROM( .b<29> )	TO( c16y.b<13> ) ;
net--b<28> =	FROM( .b<28> )	TO( c16y.b<12> ) ;
net--b<27> =	FROM( .b<27> )	TO( c16y.b<11> ) ;
net--b<26> =	FROM( .b<26> )	TO( c16y.b<10> ) ;
net--b<25> =	FROM( .b<25> )	TO( c16y.b<9> ) ;
net--b<24> =	FROM( .b<24> )	TO( c16y.b<8> ) ;
net--b<23> =	FROM( .b<23> )	TO( c16y.b<7> ) ;
net--b<22> =	FROM( .b<22> )	TO( c16y.b<6> ) ;
net--b<21> =	FROM( .b<21> )	TO( c16y.b<5> ) ;
net--b<20> =	FROM( .b<20> )	TO( c16y.b<4> ) ;
net--b<19> =	FROM( .b<19> )	TO( c16y.b<3> ) ;
net--b<18> =	FROM( .b<18> )	TO( c16y.b<2> ) ;
net--b<17> =	FROM( .b<17> )	TO( c16y.b<1> ) ;
net--b<16> =	FROM( .b<16> )	TO( c16y.b<0> ) ;
net--b<15> =	FROM( .b<15> )	TO( c16x.b<15> ) ;
net--b<14> =	FROM( .b<14> )	TO( c16x.b<14> ) ;
net--b<13> =	FROM( .b<13> )	TO( c16x.b<13> ) ;
net--b<12> =	FROM( .b<12> )	TO( c16x.b<12> ) ;
net--b<11> =	FROM( .b<11> )	TO( c16x.b<11> ) ;
net--b<10> =	FROM( .b<10> )	TO( c16x.b<10> ) ;
net--b<9> =	FROM( .b<9> )	TO( c16x.b<9> ) ;
net--b<8> =	FROM( .b<8> )	TO( c16x.b<8> ) ;
net--b<7> =	FROM( .b<7> )	TO( c16x.b<7> ) ;
net--b<6> =	FROM( .b<6> )	TO( c16x.b<6> ) ;
net--b<5> =	FROM( .b<5> )	TO( c16x.b<5> ) ;
net--b<4> =	FROM( .b<4> )	TO( c16x.b<4> ) ;
net--b<3> =	FROM( .b<3> )	TO( c16x.b<3> ) ;
net--b<2> =	FROM( .b<2> )	TO( c16x.b<2> ) ;
net--b<1> =	FROM( .b<1> )	TO( c16x.b<1> ) ;
net--b<0> =	FROM( .b<0> )	TO( c16x.b<0> ) ;
net--a<31> =	FROM( .a<31> )	TO( c16y.a<15> ) ;
net--a<30> =	FROM( .a<30> )	TO( c16y.a<14> ) ;
net--a<29> =	FROM( .a<29> )	TO( c16y.a<13> ) ;
net--a<28> =	FROM( .a<28> )	TO( c16y.a<12> ) ;
net--a<27> =	FROM( .a<27> )	TO( c16y.a<11> ) ;
net--a<26> =	FROM( .a<26> )	TO( c16y.a<10> ) ;
net--a<25> =	FROM( .a<25> )	TO( c16y.a<9> ) ;
net--a<24> =	FROM( .a<24> )	TO( c16y.a<8> ) ;
net--a<23> =	FROM( .a<23> )	TO( c16y.a<7> ) ;
net--a<22> =	FROM( .a<22> )	TO( c16y.a<6> ) ;
net--a<21> =	FROM( .a<21> )	TO( c16y.a<5> ) ;
net--a<20> =	FROM( .a<20> )	TO( c16y.a<4> ) ;
net--a<19> =	FROM( .a<19> )	TO( c16y.a<3> ) ;
net--a<18> =	FROM( .a<18> )	TO( c16y.a<2> ) ;
net--a<17> =	FROM( .a<17> )	TO( c16y.a<1> ) ;
net--a<16> =	FROM( .a<16> )	TO( c16y.a<0> ) ;
net--a<15> =	FROM( .a<15> )	TO( c16x.a<15> ) ;
net--a<14> =	FROM( .a<14> )	TO( c16x.a<14> ) ;
net--a<13> =	FROM( .a<13> )	TO( c16x.a<13> ) ;
net--a<12> =	FROM( .a<12> )	TO( c16x.a<12> ) ;
net--a<11> =	FROM( .a<11> )	TO( c16x.a<11> ) ;
net--a<10> =	FROM( .a<10> )	TO( c16x.a<10> ) ;
net--a<9> =	FROM( .a<9> )	TO( c16x.a<9> ) ;
net--a<8> =	FROM( .a<8> )	TO( c16x.a<8> ) ;
net--a<7> =	FROM( .a<7> )	TO( c16x.a<7> ) ;
net--a<6> =	FROM( .a<6> )	TO( c16x.a<6> ) ;
net--a<5> =	FROM( .a<5> )	TO( c16x.a<5> ) ;
net--a<4> =	FROM( .a<4> )	TO( c16x.a<4> ) ;
net--a<3> =	FROM( .a<3> )	TO( c16x.a<3> ) ;
net--a<2> =	FROM( .a<2> )	TO( c16x.a<2> ) ;
net--a<1> =	FROM( .a<1> )	TO( c16x.a<1> ) ;
net--a<0> =	FROM( .a<0> )	TO( c16x.a<0> ) ;
net-nand-3-nout =	FROM( nand-3.nout )	TO( c16y.cin ) ;
net--cin =	FROM( .cin )	TO( c16x.cin ) ;
net--do =	FROM( .do )	TO( c16y.do ) ;
net--do =	FROM( .do )	TO( c16x.do ) ;
"***** bus *****"
"***** selecter *****"
"***** or *****"
net-inv-4-nout =	FROM( inv-4.nout )	TO( nor-1.in1 ) ;
net-inv-5-nout =	FROM( inv-5.nout )	TO( nor-1.in2 ) ;
"***** and *****"
net-inv-1-nout =	FROM( inv-1.nout )	TO( nand-1.in1 ) ;
net-nand-2-nout =	FROM( nand-2.nout )	TO( nand-1.in2 ) ;
net-c16y-pout =	FROM( c16y.pout )	TO( nand-2.in1 ) ;
net-c16x-qout =	FROM( c16x.qout )	TO( nand-2.in2 ) ;
net-inv-2-nout =	FROM( inv-2.nout )	TO( nand-3.in1 ) ;
net-nand-4-nout =	FROM( nand-4.nout )	TO( nand-3.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-4.in1 ) ;
net-c16x-pout =	FROM( c16x.pout )	TO( nand-4.in2 ) ;
net-inv-3-nout =	FROM( inv-3.nout )	TO( nand-5.in1 ) ;
net-nand-6-nout =	FROM( nand-6.nout )	TO( nand-5.in2 ) ;
net--cin =	FROM( .cin )	TO( nand-6.in1 ) ;
net--pout =	FROM( .pout )	TO( nand-6.in2 ) ;
"***** not *****"
net-c16y-qout =	FROM( c16y.qout )	TO( inv-1.in ) ;
net-c16x-qout =	FROM( c16x.qout )	TO( inv-2.in ) ;
net--qout =	FROM( .qout )	TO( inv-3.in ) ;
net-c16x-pout =	FROM( c16x.pout )	TO( inv-4.in ) ;
net-c16y-pout =	FROM( c16y.pout )	TO( inv-5.in ) ;
"***** reset clock *****"
net--m_clock =	FROM( .m_clock )	TO( c16x.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( c16x.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( c16x.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( c16x.b_clock ) ;
net--m_clock =	FROM( .m_clock )	TO( c16y.m_clock ) ;
net--s_clock =	FROM( .s_clock )	TO( c16y.s_clock ) ;
net--p_reset =	FROM( .p_reset )	TO( c16y.p_reset ) ;
net--b_clock =	FROM( .b_clock )	TO( c16y.b_clock ) ;
END-SECTION ;
END ;
CEND ;
